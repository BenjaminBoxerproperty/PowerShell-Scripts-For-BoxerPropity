$FolderLocation = Read-Host -Prompt 'Location of Application Folder'
$FileExetention = Read-Host -Prompt 'What type of File Extention'
$FileName = Read-Host -Prompt 'Save File Name'


$filestoUse = Get-ChildItem -Filter *.dll -Recurse | Select-Object Name,AssemblyVersion

$startTime = Get-Date -format "MMM-dd-HH:mm:ss"

$elapsedTime = [System.Diagnostics.Stopwatch]::StartNew()
$scriptPath = "C:"
$scriptPath = "$FolderLocation"
$counter = 1
$filestoUse = Get-ChildItem -Path $scriptPath -Recurse -Include *.$FileExetention

write-output "Path analyzed: $scriptPath"
write-output "DLL files found: " $filestoUse.length

foreach ($f in $filestoUse)
{
	
	$version = [System.Diagnostics.FileVersionInfo]::GetVersionInfo($f).FileVersion
	$dllName = $f.Name
	$splitValue = $f.DirectoryName.Split("\")
	$splitValue = $f.Name
	
    write-output "AssemblyVersion: $f.AssemblyVersion.Number"
	write-output "VersionSize: " $version.length
	if ($version.length -eq 0) {
		write-output "$f ** AssemblyVersion: No file version"
		$dataVersion = "$f ** AssemblyVersion: No file version"
	}
	else {
		write-output "$f ** AssemblyVersion: $version"
		$dataVersion = "$f ** AssemblyVersion: $version"
	}
	write-output "dllName: $dllName"
	<# $dllNames = @(
	[pscustomobject]@{
			Ctn = $counter
			dllName = $f.Name-$version
		}
	)
	$dllNames | Export-Csv dllNames.csv -Append -NoTypeInformation #>
	
	$dllFiles = @(
		[pscustomobject]@{
			Ctn = $counter
			dllPath = $f.DirectoryName
			dllName = "$dllname-$version"
			AssemblyVersion = $version
		}
	)
	$dllFiles | Export-Csv -Path "C:\Users\Benjamin Saul\Desktop\$FileName.csv" -Append -NoTypeInformation
	$counter++
}

$currentTime = Get-Date -format "MMM-dd-HH:mm:ss"
$seconds = $elapsedTime.Elapsed.TotalSeconds
$elapsedTime.Stop()
write-output "Elapsed Time (seconds): $seconds"

#C:\Users\Benjamin Saul\Desktop\GetDLLSVersion.ps1
